// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var Day10 = require("../../src/week2/Day10.bs.js");
var TestUtil = require("../TestUtil.bs.js");

var test_input = "16\n10\n15\n5\n1\n11\n7\n19\n6\n12\n4";

var larger_test_input = "28\n33\n18\n42\n31\n14\n46\n20\n48\n47\n24\n23\n49\n45\n19\n38\n39\n11\n1\n32\n25\n35\n8\n17\n7\n9\n4\n2\n34\n10\n3";

var real_input = Fs.readFileSync("input/Day10.txt", "utf8");

var test_jolts_expected = [
  0,
  1,
  4,
  5,
  6,
  7,
  10,
  11,
  12,
  15,
  16,
  19
];

var larger_test_jolts = Day10.parse_jolts(larger_test_input);

Jest.describe("parse_jolts", (function (param) {
        TestUtil.test_equal("test_input을 넣으면 " + test_jolts_expected.toString() + "을 반환한다", Day10.parse_jolts(test_input), test_jolts_expected);
        TestUtil.test_equal("larger_test_input을 넣으면 길이가 1+31=32개다.", larger_test_jolts.length, 32);
        return TestUtil.test_equal("real_input을 넣으면 길이가 1+=개다.", Day10.parse_jolts(real_input).length, 115);
      }));

var test_result_expected = [
  7,
  0,
  5
];

var larger_test_result = [
  22,
  0,
  10
];

Jest.describe("find_longest_chain", (function (param) {
        TestUtil.test_equal("built_in을 포함한 test_jolts를 넣으면 (7, 0, 5) 를 반환한다.", Day10.find_longest_chain(test_jolts_expected), test_result_expected);
        TestUtil.test_equal("test_result의 1-jolt diff와 3-jolt를 곱하면 35가 나온다.", Day10.multifly_1_and_3(test_result_expected), 35);
        TestUtil.test_equal("built_in 포함 larger_test_jolts를 넣으면 (22, 0, 10)을 반환한다.", Day10.find_longest_chain(larger_test_jolts), larger_test_result);
        TestUtil.test_equal("larget_test_result의 1-jolt diff와 3-jolt를 곱하면 220이 나온다.", Day10.multifly_1_and_3(larger_test_result), 220);
        var real_jolts = Day10.parse_jolts(real_input);
        return TestUtil.test_equal("real_jolts의 1-jolt diff와 3-jolt를 곱하면 ...", Day10.multifly_1_and_3(Day10.find_longest_chain(real_jolts)), 3000);
      }));

exports.test_input = test_input;
exports.larger_test_input = larger_test_input;
exports.real_input = real_input;
exports.test_jolts_expected = test_jolts_expected;
exports.larger_test_jolts = larger_test_jolts;
exports.test_result_expected = test_result_expected;
exports.larger_test_result = larger_test_result;
/* real_input Not a pure module */
